package org.komapper.processor

internal object BackquotedSymbols {
    const val Argument = "`org.komapper.core.dsl.expression`.Operand.Argument"
    const val AutoIncrement = "`org.komapper.core.dsl.metamodel`.IdGenerator.AutoIncrement"
    const val Clock = "`java.time`.Clock"
    const val ColumnExpression = "`org.komapper.core.dsl.expression`.ColumnExpression"
    const val ConcurrentHashMap = "`java.util.concurrent`.ConcurrentHashMap"
    const val EmbeddableMetamodel = "`org.komapper.core.dsl.metamodel`.EmbeddableMetamodel"
    const val EmbeddedMetamodel = "`org.komapper.core.dsl.metamodel`.EmbeddedMetamodel"
    const val EntityDescriptor = "__EntityDescriptor"
    const val EntityMetamodel = "`org.komapper.core.dsl.metamodel`.EntityMetamodel"
    const val EntityMetamodelDeclaration = "`org.komapper.core.dsl.metamodel`.EntityMetamodelDeclaration"
    const val EntityMetamodelFactory = "`org.komapper.core.dsl.metamodel`.EntityMetamodelFactory"
    const val EntityMetamodelFactorySpi = "`org.komapper.core.spi`.EntityMetamodelFactory"
    const val EntityMetamodelImplementor = "`org.komapper.core.dsl.metamodel`.EntityMetamodelImplementor"
    const val EntityMetamodelStub = "`org.komapper.core.dsl.metamodel`.EntityMetamodelStub"
    const val EntityStore = "`org.komapper.core.dsl.query`.EntityStore"
    const val EntityStoreContext = "`org.komapper.core.dsl.query`.EntityStoreContext"
    const val EnumMappingException = "`org.komapper.core.dsl.runner`.EnumMappingException"
    const val FlowSubquery = "`org.komapper.core.dsl.query`.FlowSubquery"
    const val IdContext = "`org.komapper.core.dsl.metamodel`.IdContext"
    const val IdGenerator = "`org.komapper.core.dsl.metamodel`.IdGenerator"
    const val Instant = "`java.time`.Instant"
    const val KomapperExperimentalAssociation = "`org.komapper.annotation`.KomapperExperimentalAssociation"
    const val LocalDateTime = "`java.time`.LocalDateTime"
    const val Operand = "`org.komapper.core.dsl.expression`.Operand"
    const val ProjectionType = "`org.komapper.core.dsl.query`.ProjectionType"
    const val ProjectionType_INDEX = "`org.komapper.core.dsl.query`.ProjectionType.INDEX"
    const val PropertyDescriptor = "`org.komapper.core.dsl.metamodel`.PropertyDescriptor"
    const val PropertyMetamodel = "`org.komapper.core.dsl.metamodel`.PropertyMetamodel"
    const val PropertyMetamodelImpl = "`org.komapper.core.dsl.metamodel`.PropertyMetamodelImpl"
    const val PropertyMetamodelStub = "`org.komapper.core.dsl.metamodel`.PropertyMetamodelStub"
    const val SelectQuery = "`org.komapper.core.dsl.query`.SelectQuery"
    const val Sequence = "`org.komapper.core.dsl.metamodel`.IdGenerator.Sequence"
    const val TemplateSelectQuery = "`org.komapper.core.dsl.query`.TemplateSelectQuery"
    const val TemplateSelectQueryBuilder = "`org.komapper.core.dsl.query`.TemplateSelectQueryBuilder"
    const val UUID = "`java.util`.UUID"
}
