name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: false

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    timeout-minutes: 10
 
    steps:
      - name: Assign input version
        if: github.event.inputs.version != null
        run: echo "RELEASE_VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV

      - name: Get latest draft release title
        if: github.event.inputs.version == null
        run: |
          TITLE=$(gh api repos/${{ github.repository }}/releases \
            --jq '.[] | select(.draft==true) | .name' | head -n 1)
          if [[ -z "$TITLE" ]]; then
            echo "No draft release found."
            exit 1
          fi
          RELEASE_VERSION=${TITLE#v}
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}

      - name: Prepare git config
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@4d9f0ba0025fe599b4ebab900eb7f3a1d93ef4c2 # v5.0.0

      - name: Release ${{ env.RELEASE_VERSION }}
        run: ./gradlew release -Prelease.releaseVersion=${{ env.RELEASE_VERSION }}

      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: build
          path: ./**/build/reports
