[versions]
kotlin = "2.1.10"
ksp = "2.1.10-1.0.29"
kotlinx-coroutines = "1.10.1"
springframework = "5.3.39"
spring-boot = "2.7.18"
quarkus = "3.18.1"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }

ksp-symbol-processing = { module = "com.google.devtools.ksp:symbol-processing", version.ref = "ksp" }
ksp-symbol-processing-api = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
ksp-test = { module = "dev.zacsweers.kctfork:ksp", version = "0.7.0" }

kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-reactive = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactive", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor", version.ref = "kotlinx-coroutines"}

kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version = "0.6.1" }

jdbc-h2 = { module = "com.h2database:h2", version = "2.3.232" }
jdbc-mariadb = { module = "org.mariadb.jdbc:mariadb-java-client", version = "3.5.1" }
jdbc-mysql = { module = "mysql:mysql-connector-java", version = "8.0.33" }
jdbc-oracle = { module = "com.oracle.database.jdbc:ojdbc11", version = "23.7.0.25.01" }
jdbc-postgresql = { module = "org.postgresql:postgresql", version = "42.7.5" }
jdbc-sqlserver = { module = "com.microsoft.sqlserver:mssql-jdbc", version = "12.8.1.jre11" }

r2dbc-h2 = { module = "io.r2dbc:r2dbc-h2", version = "1.0.0.RELEASE" }
r2dbc-mariadb = { module = "org.mariadb:r2dbc-mariadb", version = "1.3.0" }
r2dbc-mysql = { module = "com.github.jasync-sql:jasync-r2dbc-mysql", version = "2.2.4" }
r2dbc-oracle = { module = "com.oracle.database.r2dbc:oracle-r2dbc", version = "1.3.0" }
r2dbc-postgresql = { module = "org.postgresql:r2dbc-postgresql", version = "1.0.7.RELEASE" }
r2dbc-sqlserver = { module = "io.r2dbc:r2dbc-mssql", version = "1.0.0.RELEASE" }

r2dbc-spi = { module = "io.r2dbc:r2dbc-spi", version = "1.0.0.RELEASE" }
r2dbc-pool = { module = "io.r2dbc:r2dbc-pool", version = "1.0.2.RELEASE" }

annotations = { module = "org.jetbrains:annotations", version = "26.0.2" }
pluralize = { module = "io.github.encryptorcode:pluralize", version = "1.0.0" }
hikariCP = { module = "com.zaxxer:HikariCP", version = "6.2.1" }
sqlcommenter = { module = "com.google.cloud:sqlcommenter", version = "2.0.1" }
opentelemetry-api = { module = "io.opentelemetry:opentelemetry-api", version = "1.46.0" }
jts-core = { module = "org.locationtech.jts:jts-core", version = "1.20.0" }
slf4j-api = { module = "org.slf4j:slf4j-api", version = "2.0.16" }
logback-classic = { module = "ch.qos.logback:logback-classic", version = "1.5.16" }

spring-beans = { module = "org.springframework:spring-beans", version.ref = "springframework" }
spring-core = { module = "org.springframework:spring-core", version.ref = "springframework" }
spring-context = { module = "org.springframework:spring-context", version.ref = "springframework" }
spring-jdbc = { module = "org.springframework:spring-jdbc", version.ref = "springframework" }
spring-r2dbc = { module = "org.springframework:spring-r2dbc", version.ref = "springframework" }
spring-test = { module = "org.springframework:spring-test", version.ref = "springframework" }
spring-tx = { module = "org.springframework:spring-tx", version.ref = "springframework" }

spring-boot-autoconfigure = { module = "org.springframework.boot:spring-boot-autoconfigure", version.ref = "spring-boot" }
spring-boot-starter = { module = "org.springframework.boot:spring-boot-starter", version.ref = "spring-boot" }
spring-boot-starter-jdbc = { module = "org.springframework.boot:spring-boot-starter-jdbc", version.ref = "spring-boot" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot" }
spring-boot-test-autoconfigure = { module = "org.springframework.boot:spring-boot-test-autoconfigure", version.ref = "spring-boot" }

quarkus-bom = { module = "io.quarkus:quarkus-bom", version.ref = "quarkus" }
quarkus-core = { module = "io.quarkus:quarkus-core" }
quarkus-arc = { module = "io.quarkus:quarkus-arc" }
quarkus-agroal = { module = "io.quarkus:quarkus-agroal" }
quarkus-core-deployment = { module = "io.quarkus:quarkus-core-deployment", version.ref = "quarkus" }
quarkus-arc-deployment = { module = "io.quarkus:quarkus-arc-deployment", version.ref = "quarkus" }
quarkus-agroal-deployment = { module = "io.quarkus:quarkus-agroal-deployment", version.ref = "quarkus" }
quarkus-datasource-deployment = { module = "io.quarkus:quarkus-datasource-deployment", version.ref = "quarkus" }

testcontainers-bom = { module = "org.testcontainers:testcontainers-bom", version = "1.20.4" }
testcontainers-mariadb = { module = "org.testcontainers:mariadb" }
testcontainers-mysql = { module = "org.testcontainers:mysql" }
testcontainers-oracle = { module = "org.testcontainers:oracle-xe" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql" }
testcontainers-sqlserver = { module = "org.testcontainers:mssqlserver" }

google-java-format = { module = "com.google.googlejavaformat:google-java-format", version = "1.25.2" }
ktlint = { module = "com.pinterest.ktlint:ktlint-cli", version = "1.5.0" }

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }

spotless = { id = "com.diffplug.spotless", version = "7.0.2" }
publish = { id = "io.github.gradle-nexus.publish-plugin", version = "2.0.0" }
release = { id = "net.researchgate.release", version = "3.1.0" }
plugin-publish = { id = "com.gradle.plugin-publish", version = "1.3.1" }

spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
kotlin-plugin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }

quarkus = { id = "io.quarkus.extension", version.ref = "quarkus" }
